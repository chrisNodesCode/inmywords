// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_UNPOOLED")
}

model User {
  id            String       @id @default(uuid())
  email         String       @unique
  passwordHash  String
  createdAt     DateTime     @default(now())
  entries       Entry[]
  preference    Preference?
}

model Criteria {
  id          String        @id @default(uuid())
  code        String        @unique
  title       String
  description String?
  subcriteria Subcriteria[]
  entries     Entry[]
}

model Subcriteria {
  id           String     @id @default(uuid())
  code         String     @unique
  title        String
  description  String?
  criterion    Criteria   @relation(fields: [criterionId], references: [id])
  criterionId  String
  entries      Entry[]
}

model Entry {
  id             String       @id @default(uuid())
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  criterion      Criteria?    @relation(fields: [criterionId], references: [id])
  criterionId    String?
  subcriterion   Subcriteria? @relation(fields: [subcriterionId], references: [id])
  subcriterionId String?
  title          String
  content        String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Preference {
  id          String  @id @default(uuid())
  user        User    @relation(fields: [userId], references: [id])
  userId      String  @unique
  editorBg    String  @default("#FFFFFF")
  editorWidth String  @default("comfortable")
}
